This is my "port" of GNU-Readline to Java. Actually, it is a crude wrapper 
using the Java Native Interface (JNI).

This version implements basic readline functionality like line editing and
filename completion, which should be just enough for normal use.
Code for custom completers and history file reading/writing was provided
by erik (erik@skiinfo.fr). Since I changed some of the code, all bugs
are my fault and bugreports should be adressed to me.

The binary distribution contains the API documentation, a JAR with the
Readline class and the shared library libJavaReadline.so. It was compiled
running Linux 2.2.18 with glibc 2.2.

The source distribution contains all the source (I hope this doesn't surprise
you ;-) and a system of makefiles. You need the JDK to compile it.

COMPILATION
===========

Compilation should be no problem. Try "make all". You should set the
variable JAVA_HOME (or edit the makefile). Also, if you don't use jikes,
you should change the variables JAVAC and JAVAC_OPT in the makefile. A better
alternative is to install jikes, it will speed up your development by
a factor of 2-3.

INSTALLATION
============

Copy the file libJavaReadline.so to one of your library directories or add
the directory where you put libJavaReadline.so to LD_LIBARY_PATH. Also, add
java_readline.jar to your CLASSPATH. After building the jar and the shared
library, you can run a program with something like:

LD_LIBRARY_PATH=/usr/lib java -cp java_readline.jar org.foo.bar.MyClass

assuming that you put libJavaReadline.so into /usr/lib.

If you think you found a bug or want to contribute some code please drop 
me a note.

Bernhard Bablok
mail@bablokb.de
http://www.bablokb.de

